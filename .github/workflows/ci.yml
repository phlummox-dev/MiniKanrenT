
name: build-test

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - '**.pmd'
      - appveyor.yml
      - .gitignore
  push:
    paths-ignore:
      - '**.md'
      - '**.pmd'
      - appveyor.yml
      - .gitignore

jobs:
  cabal_build:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macOS-latest, windows-latest]
        cabal: ["3.6"]
        ghc:
          - "8.0.2"
          - "8.2.2"
          - "8.6.5"

    steps:
    - uses: actions/checkout@v2
      name: Check out code

    - uses: haskell/actions/setup@v1.2
      name: Setup Haskell
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v2
      name: Cache ~/.cabal/store
      with:
        # oft-given path of ~/.cabal/store is WRONG on windows.
        # see https://markkarpov.com/post/github-actions-for-haskell-ci.html
        #key: ${{ secrets.CI_CACHE_DATE }}-${{ runner.os }}-${{ matrix.ghc }}-cabal-${{ hashFiles('cabal.project.freeze*') }}-${{github.ref_name}}
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal-${{ hashFiles('cabal.project.freeze*') }}-${{github.ref_name}}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-cabal-${{ hashFiles('cabal.project.freeze*') }}
          ${{ runner.os }}-${{ matrix.ghc }}-cabal
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle

    - name: Install dependencies
      run: |
        cabal v2-update
        cabal v2-build --dependencies-only --reorder-goals --max-backjumps=-1 --minimize-conflict-set

    - name: Build
      run: |
        cabal v2-clean
        cabal v2-build  --reorder-goals --max-backjumps=-1 --minimize-conflict-set

    - name: Documentation
      run: |
        cabal v2-haddock

    - name: Tests
      run: |
        cabal v2-build --dependencies-only --enable-tests --enable-benchmarks --reorder-goals --max-backjumps=-1 --minimize-conflict-set
        cabal v2-install hspec-discover
        cabal v2-test --enable-tests

  stack_build:
    name: ${{ matrix.os }}/ ${{ matrix.lts }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macOS-latest, windows-latest]
        lts: ["lts-8", "lts-11", "lts-16"]

    steps:
    - uses: actions/checkout@v2
      name: Check out code

    - uses: haskell/actions/setup@v1.2
      name: Setup Stack
      id: setup-haskell-stack
      with:
        ghc-version: "8.6.5"
        cabal-version: "3.6"
        enable-stack: true
        stack-version: "latest"

    - uses: actions/cache@v2
      name: Cache ~/.stack
      if: runner.os != 'Windows'
      with:
        #key: ${{ secrets.CI_CACHE_DATE }}-${{ runner.os }}-${{ matrix.lts }}-stack-${{ hashFiles('stack-*yaml.lock') }}
        key: ${{ runner.os }}-${{ matrix.lts }}-stack-${{ hashFiles('stack-*yaml.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.lts }}-stack
          #${{ secrets.CI_CACHE_DATE }}-${{ runner.os }}-${{ matrix.lts }}-stack
        path: |
          ${{ steps.setup-haskell-stack.outputs.stack-root }}

    # On Windows, some of the stack state (e.g. copies of GHC) is stored,
    # not in c:\sr, but in %LOCALAPPDATA%\Programs\stack
    # (e.g. C:\Users\runneradmin\AppData\Local\Programs\stack)
    - uses: actions/cache@v2
      name: Cache ~/.stack
      if: runner.os == 'windows'
      with:
        #key: ${{ secrets.WINDOWS_CI_CACHE_DATE }}-${{ runner.os }}-${{ matrix.lts }}-stack-${{ hashFiles('stack-*yaml.lock') }}
        key: ${{ runner.os }}-${{ matrix.lts }}-stack-${{ hashFiles('stack-*yaml.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.lts }}-stack
          #${{ secrets.WINDOWS_CI_CACHE_DATE }}-${{ runner.os }}-${{ matrix.lts }}-stack
        path: |
          ~\AppData\Local\Programs\stack
          ${{ steps.setup-haskell-stack.outputs.stack-root }}

    # On macOS, restoring cache may muck up executable permissions
    - name: Clear setup-exe-cache directory
      if: runner.os == 'macOS'
      run: |
        set -x
        rm -rf ${{ steps.setup-haskell-stack.outputs.stack-root }}/setup-exe-cache

    - name: stack init
      shell: bash
      run: |
        set -x
        if [ -f "stack-${{ matrix.lts }}.yaml" ]; then
          cp "stack-${{ matrix.lts }}.yaml" stack.yaml;
        else
          stack --resolver=${{ matrix.lts }} init
        fi

    - name: Build
      shell: bash
      run: |
        set -x
        stack --resolver=${{ matrix.lts }} build --fast

    - name: Test
      shell: bash
      run: |
        set -x
        stack --resolver=${{ matrix.lts }} test --fast


